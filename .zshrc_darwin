# Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"
# ============================================

# zsh-vi-mode configs
function zvm_config() {
  ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
  ZVM_VI_INSERT_ESCAPE_BINDKEY=jk
  ZVM_KEYTIMEOUT=0.03
}

function zvm_after_init() {
  eval "$(fzf --zsh)"
}

function gitcfg() {
  case $1 in
  (wke) git config user.name youmin1017
    git config user.email youmin1017@wke.csie.ncnu.edu.tw ;;
  (github | gitlab) git config user.name youmin1017
    git config user.email xx4016481@gmail.com ;;
  (*) print "{$1} is not in your git config"
    return 1 ;;
  esac
}

# Antidote
# initialize plugins statically with ${ZDOTDIR:-~}/.zsh_plugins.txt
[ -f /Users/youmin/.antidote/antidote.zsh ] && source '/Users/youmin/.antidote/antidote.zsh'
antidote load

# pnpm
export PNPM_HOME="/Users/youmin/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# Alias

# ls
if [ -x "$(command -v eza)" ]; then
  alias --  l='eza -lh  --icons=auto --sort=name --group-directories-first' # long list
  alias -- ls='eza -1   --icons=auto --sort=name --group-directories-first' # short list
  alias -- ll='eza -lha --icons=auto --sort=name --group-directories-first' # long list all
  alias -- ld='eza -lhD --icons=auto' # long list dirs
  alias -- lt='eza --icons=auto --tree' # list folder as tree
else
  alias -- ls='ls --color=auto'
fi

alias -- ii='open -a Finder.app'
alias -- lt='eza --icons=auto --tree' # list folder as tree
alias -- vim='nvim'
alias -- rm='trash -F'
alias -- lg='lazygit'
alias -- kc='kubectl'
alias -- uc='utmctl'
alias -- cz='chezmoi'

# kitty ssh
if [ -x "$(command -v kitten)" ]; then
  alias -- ssh='kitty +kitten ssh'
fi

PATH="$PATH:"'/Users/youmin/.bun/bin'
PATH="$PATH:"'/Users/youmin/.cargo/bin'
PATH="/opt/homebrew/opt/bison/bin:$PATH"
PATH="/opt/homebrew/opt/m4/bin:$PATH"

export EDITOR='nvim'

setopt autocd
setopt inc_append_history
autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'


# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

eval "$(zoxide init --cmd z zsh)"

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

eval "$(fnm env --use-on-cd)"
eval "$(starship init zsh)"

# source <(kubectl completion zsh)
# source <(glab completion -s zsh); compdef _glab glab

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniforge/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniforge/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniforge/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniforge/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"
